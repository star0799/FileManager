Gen0：所有臨時的變數都存放這，直到Gen0的區塊滿了會啟動Gen0的GC

Gen1：Gen0以及Gen1的緩衝區，直到Gen1的區塊滿了會啟動Gen0、1的GC

Gen2：所有長壽命的資料都存在這，程式碼之中的靜態資料也存在這，若是Gen2的區塊滿了，則會啟動Gen0、1、2的GC，所以也被稱為完整的垃圾回收

有幾點比較值得提到

1.假設List已經有10筆資料，存放於G0，將第2/4筆資料清除後，啟動G0的GC，則第2/4筆資料會被GC回收，而該List則搬移到G1，倘若此時第2筆資料再重新指向值，則第2筆的資料，會存活在G0之中，而List仍然存在於G1

2.Gen2啟動時，會再將字節大於85000的物件，存放進large object heap之中

3.一般物件若是存活到Gen2，需要進行二次的搬移。若是大型物件活到Gen2啟動後仍存活，則會進行三次的搬移

綜合以上三點，優化垃圾回收管理機制可以推導出

1.小型物件的生命週期較短，多數存在於Gen0

2.大型物件的生命週期較長，多數會存活到Gen2
